#!/usr/bin/env bash

# this is a personalized config for herbstluftwm
# I made this keeping Xfce in mind, but it works if you know what you want to work.

# openrc services in artix - networkmanager, lightdm, ntpd, libvirt
# planning to use GNU stow so I can save my sanity; and possibly dip my toes into a functional package manager like Nix or Guix, specifically to maintain the non-arch repo programs and toolchains

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#1a1b26'

feh --bg-fill wallpaper/nervrei.png

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q spawn xfce4-session-logout
hc keybind $Mod-Shift-w spawn xflock4
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close_or_remove
hc keybind $Mod-Return spawn "${TERMINAL:-alacritty}" # use your $TERMINAL with xterm as fallback

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
# hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags - "5 Bullets, enough to kill a 5/6th of a man"
tag_names=( {1..6} )
tag_keys=( {1..6} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
# hc keybind $Mod-period use_index +1 --skip-visible
# hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-Shift-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
# hc keybind $Mod-Ctrl-space                                                           \
#             or , and . compare tags.focus.curframe_wcount = 2                   \
#                     . cycle_layout +1 vertical horizontal max vertical grid    \
#               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc set_layout max
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle +1
hc keybind $Mod-Shift-Tab   cycle -1
# hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# unminimize windows; especially video games
hc keybind $Mod-Control-m \
   substitute FOCUS "tags.focus.name" \
   foreach CLIENT clients. \
     sprintf MINATT "%c.minimized" CLIENT \
     sprintf TAGATT "%c.tag" CLIENT and \
       , compare MINATT "=" "true" \
       , compare TAGATT "=" FOCUS \
       , set_attr MINATT false

# rofi
hc keybind $Mod-space spawn rofi -show drun
# hc keybind $Mod-Shift-space spawn rofi -show window

# brightness
# hc keybind XF86MonBrightnessUp spawn brightnessctl s +5%
# hc keybind XF86MonBrightnessDown spawn brightnessctl s 5%-

# playerctl
hc keybind $Mod-Left spawn playerctl -p spotify previous 
hc keybind $Mod-Down spawn playerctl -p spotify play-pause
hc keybind $Mod-Right spawn playerctl -p spotify next

# playerctl universal
# hc keybind $Mod-Left spawn playerctl previous
# hc keybind $Mod-Down spawn playerctl play-pause
# hc keybind $Mod-Right spawn playerctl next

# flameshot
hc keybind $Mod-Shift-s spawn flameshot gui

# pamixer
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume @DEFAULT_SINK@ +5%
hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume @DEFAULT_SINK@ -5%
hc keybind XF86AudioMute spawn pactl set-sink-mute @DEFAULT_SINK@ toggle
hc keybind XF86AudioMicMute spawn pactl set-source-mute @DEFAULT_SOURCE@ toggle

# picom toggle
# hc keybind $Mod-p spawn pseudotile toggle

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222cc'
hc set frame_border_normal_color '#101010cc'
hc set frame_bg_normal_color '#32344a00'
hc set frame_bg_active_color '#00000000'
hc set frame_border_width 0
hc set show_frame_decorations 'focused_if_multiple'
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 10

hc attr theme.title_height 15
hc attr theme.title_when never
hc attr theme.title_font 'JetBrains Mono:pixelsize=12'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.title_depth 1  # space below the title's baseline
hc attr theme.active.color '#acb0d066'
hc attr theme.title_color '#e5e9f0d9'
hc attr theme.normal.color '#444b6166'
hc attr theme.urgent.color '#7811A1dd'
hc attr theme.tab_color '#1F1F1Fdd'
hc attr theme.active.tab_color '#2B4F0Add'
hc attr theme.active.tab_outer_color '#6C8257dd'
hc attr theme.active.tab_title_color '#ababab'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.tiling.outer_width 0
hc attr theme.background_color '#444b6a'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc floating tag=2
hc rule class=firefox tag=1
hc rule class=steam tag=2 floating=off # but I want steam intact
hc rule class=Emacs tag=3 focus=on
hc rule class=Spotify tag=4
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=~/.config/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
